<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-mybatis.xml</param-value>
	</context-param>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
	<!-- 这里filter-name必须对应applicationContext.xml中定义的<bean id="shiroFilter"/> -->
	<!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤 -->
	<!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->
	<!-- 说明：使用DelegatingFilterProxy时不需要配置任何参数，spring会根据filter-name的名字来查找bean，所以这里spring会查找id为shiroFilter的bean. -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Rest风格的URI，将页面普通的post请求转为指定的delete或者put请求 -->
	<filter>
	    <filter-name>hiddenHttpMethodFilter</filter-name>
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>hiddenHttpMethodFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>httpPutFormContentFilter</filter-name>
	    <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>httpPutFormContentFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>MessagePushServlet</servlet-name>
		<servlet-class>com.sss.jpush.MessagePushServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MessagePushServlet</servlet-name>
		<url-pattern>/messagePushServlet</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>UploadServlet</servlet-name>
		<servlet-class>com.sss.util.UploadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UploadServlet</servlet-name>
		<url-pattern>/uploadServlet</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>WeiXinServlet</servlet-name>
		<servlet-class>com.sss.wechat.servlet.WeiXinServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>WeiXinServlet</servlet-name>
		<url-pattern>/weiXinServlet</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>CreateMenuServlet</servlet-name>
		<servlet-class>com.sss.wechat.servlet.CreateMenuServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CreateMenuServlet</servlet-name>
		<url-pattern>/createMenuServlet</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>
  		login.html
  	</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/statusPage/404.html</location>
	</error-page>
	<error-page>
		<error-code>405</error-code>
		<location>/statusPage/405.html</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/statusPage/500.html</location>
	</error-page>

</web-app>