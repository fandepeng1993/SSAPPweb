<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sss.dao.IProcessDAO" >
  <resultMap id="BaseResultMap" type="com.sss.pojo.Process" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="VARCHAR" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <result column="currentstate" property="currentstate" jdbcType="INTEGER" />
    
    <association property="user" javaType="com.sss.pojo.User">
		<id column="cdu_user_id" property="userId" jdbcType="INTEGER" />
	    <result column="cdu_position_id" property="position.positionId" jdbcType="INTEGER" />
	    <result column="pu_position_name" property="position.positionName" jdbcType="VARCHAR" />
	    <result column="cdu_user_no" property="userNo" jdbcType="VARCHAR" />
	    <result column="cdu_user_name" property="userName" jdbcType="VARCHAR" />
	    <result column="cdu_user_sex" property="sex" jdbcType="VARCHAR" />
	    <result column="cdu_user_status" property="status" jdbcType="VARCHAR" />
	</association>	
  </resultMap>
  <sql id="associateQuery">
 select 
  		pr.*,
  		u.user_id as cdu_user_id,
  		u.user_name as cdu_user_name,
  		u.user_no as cdu_user_no,
  		u.position_id as cdu_position_id,
  		u.sex as cdu_user_sex,
  		u.status as cdu_user_status,
		p.position_name as pu_position_name,
		d.dept_name as du_deptName		
    from 
    	ss_process pr
   	left join
   		ss_user u
   	on
   		pr.userId = u.user_id
   	left join 
   		ss_position p
   	on
   		u.position_id = p.position_id
	left join
		ss_department d
	on
		p.dept_id=d.dept_id
  </sql>
  <select id="selectList"  resultMap="BaseResultMap"  >
    <include refid="associateQuery" /> order by pr.createdate asc
  </select> 
  <select id="selectByIds"  resultMap="BaseResultMap"  >
    <include refid="associateQuery" />
    where checkdataIds = #{ids}
    order by pr.createdate desc
  </select>
  <select id="selectDate" resultMap="BaseResultMap" >
    <include refid="associateQuery" /> 
    where pr.currentstate = #{currentstate,jdbcType=INTEGER} 
    		AND pr.details = "成功"
    order by pr.createdate desc
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <include refid="associateQuery" />
    from ss_process
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ss_process
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sss.pojo.Process" >
    insert into ss_process (id, userId, createdate, 
      details,checkdataIds,currentstate)
    values (#{id,jdbcType=INTEGER}, #{user.userId,jdbcType=INTEGER}, now, 
      #{details,jdbcType=VARCHAR}, #{checkdataIds,jdbcType=VARCHAR},
      #{currentstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sss.pojo.Process" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> 
        SELECT LAST_INSERT_ID() AS ID   
    </selectKey>
    insert into ss_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user != null and user.userId != null" >
        userId,
      </if>
     	createdate,
      <if test="details != null" >
        details,
      </if>
      <if test="checkdataIds != null" >
        checkdataIds,
      </if>
      <if test="currentstate != null" >
        currentstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user != null and user.userId != null" >
        #{user.userId,jdbcType=INTEGER},
      </if>
      <if test="createdate == null or createdate == ''" >
        now(),
      </if>
      <if test="details != null" >
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="checkdataIds != null" >
        #{checkdataIds,jdbcType=VARCHAR},
      </if>
      <if test="currentstate != null" >
        #{currentstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sss.pojo.Process" >
    update ss_process
    <set >
      <if test="user != null and user.userId != null" >
        userId,
      </if>
      <if test="createdate != null and createdate != ''" >
        createdate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="details != null" >
        details = #{details,jdbcType=VARCHAR},
      </if>
	  <if test="checkdataIds != null" >
        #{checkdataIds,jdbcType=VARCHAR},
      </if>
      <if test="currentstate != null" >
        #{currentstate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sss.pojo.Process" >
    update ss_process
    set userId = #{user.userId,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      checkdataIds = #{checkdataIds,jdbcType=VARCHAR},
      currentstate = #{currentstate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 高级搜索 -->
  <select id="selectByAdvancedSearchDTO" useCache="false" resultMap="BaseResultMap">
	<include refid="associateQuery" />
	where 1=1 
		<if test="list != null">
			<foreach item="item" index="index" collection="list" separator=" " >  
			  and ${item.fieldName} ${item.condition} ${item.fieldValue} 
			</foreach>  
		</if>
	order by pr.createdate asc
  </select>
  <!-- 复杂高级搜索 -->
  <select id="selectByComplexAdvancedSearchDTO" useCache="false" resultMap="BaseResultMap">
    <include refid="associateQuery" />
    where 1=1 
    	<if test="list != null">
		    <foreach item="mapItem" index="listIndex" collection="list" >  
		    	<if test="listIndex == 0">and</if>
				 (
				<foreach item="item" index="index" collection="mapItem.searchDTOs">
					${item.fieldName} ${item.condition} ${item.fieldValue} ${item.LogicalOperator} 
				</foreach>
				)
				${mapItem.groupLogicalOperator}
			</foreach>  
    	</if>
    order by pr.createdate asc
  </select>
</mapper>