<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sss.dao.IInstitutionDAO" >
  <resultMap id="BaseResultMap" type="com.sss.pojo.Institution" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="VARCHAR" />
    
    <association property="position" javaType="com.sss.pojo.Position">
		<id column="ip_position_id" property="positionId" jdbcType="INTEGER" />
	    <result column="ip_position_name" property="positionName" jdbcType="VARCHAR" />
	    <result column="ip_dept_id" property="dept.deptId" jdbcType="INTEGER" />
	</association>
  </resultMap>
  <sql id="associateQuery">
  	select 
  		i.*,
    	p.position_id as ip_position_id,
    	p.position_name as ip_position_name,
    	p.dept_id as ip_dept_id
    from 
    	ss_institution i
    left join 
    	ss_position p
    on 
    	i.positionId = p.position_id
  </sql>
  <select id="selectList"  resultMap="BaseResultMap"  >
    <include refid="associateQuery" /> order by i.createdate desc
  </select>
  <select id="selectListByPosId"  resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <include refid="associateQuery" /> 
    where i.positionId = #{positionId,jdbcType=INTEGER} order by i.createdate desc
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <include refid="associateQuery" />
    where i.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ss_institution
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sss.pojo.Institution" >
    insert into ss_institution (id, positionId, name, content, 
      score, createdate)
    values (#{id,jdbcType=INTEGER}, #{position.positionId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{createdate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sss.pojo.Institution" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> 
        SELECT LAST_INSERT_ID() AS ID   
    </selectKey>
    insert into ss_institution
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="position != null and position.positionId != null" >
        positionId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="score != null" >
        score,
      </if>
        createdate,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="position != null and position.positionId != null" >
        #{position.positionId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createdate == null or createdate == ''" >
        now(),
      </if>
      <if test="createdate != null and createdate != ''" >
        #{createdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sss.pojo.Institution" >
    update ss_institution
    <set >
      <if test="position != null and position.positionId != null" >
        positionId = #{position.positionId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createdate != null and createdate != ''" >
        createdate = #{createdate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sss.pojo.Institution" >
    update ss_institution
    set positionId = #{position.positionId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 高级搜索 -->
  <select id="selectByAdvancedSearchDTO" useCache="false" resultMap="BaseResultMap">
	<include refid="associateQuery" />
	where 1=1 
		<if test="list != null">
			<foreach item="item" index="index" collection="list" separator=" " >  
			  and ${item.fieldName} ${item.condition} ${item.fieldValue} 
			</foreach>  
		</if>
	order by i.createdate desc
  </select>
  <!-- 复杂高级搜索 -->
  <select id="selectByComplexAdvancedSearchDTO" useCache="false" resultMap="BaseResultMap">
    <include refid="associateQuery" />
    where 1=1 
    	<if test="list != null">
		    <foreach item="mapItem" index="listIndex" collection="list" >  
		    	<if test="listIndex == 0">and</if>
				 (
				<foreach item="item" index="index" collection="mapItem.searchDTOs">
					${item.fieldName} ${item.condition} ${item.fieldValue} ${item.LogicalOperator} 
				</foreach>
				)
				${mapItem.groupLogicalOperator}
			</foreach>  
    	</if>
    order by i.createdate desc
  </select>
</mapper>