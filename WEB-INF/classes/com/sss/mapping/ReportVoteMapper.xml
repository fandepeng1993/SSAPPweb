<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sss.dao.IReportVoteDAO" >
  <resultMap id="BaseResultMap" type="com.sss.pojo.ReportVote" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="reportId" property="reportId" jdbcType="INTEGER" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    
    <association property="user" javaType="com.sss.pojo.User">
		<id column="ru_user_id" property="userId" jdbcType="INTEGER" />
	    <result column="ru_user_no" property="userNo" jdbcType="VARCHAR" />
	    <result column="ru_user_name" property="userName" jdbcType="VARCHAR" />
	    <result column="ru_user_photoUrl" property="photoUrl" jdbcType="VARCHAR" />
	</association>
  </resultMap>
  <sql id="associateQuery">
  	select 
  		r.*,
  		u.user_id as ru_user_id,
  		u.user_no as ru_user_no,
  		u.user_name as ru_user_name,
  		u.photoUrl as ru_user_photoUrl
    from 
    	ss_reportvote r
   	left join
   		ss_user u
   	on
   		r.userId = u.user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <include refid="associateQuery" />
    where r.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByReportIdAndCate" resultMap="BaseResultMap" >
    <include refid="associateQuery" />
    where r.reportId = #{reportId,jdbcType=INTEGER} and r.category = #{category,jdbcType=INTEGER} 
    order by r.createdate desc
  </select>
  <select id="selByReportAndUser" resultMap="BaseResultMap" >
    <include refid="associateQuery" />
    where r.reportId = #{reportId,jdbcType=INTEGER} and 
    	  r.category = #{category,jdbcType=INTEGER} and
    	  r.userId = #{userId,jdbcType=INTEGER}
    order by r.createdate desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ss_reportvote
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sss.pojo.ReportVote" >
    insert into ss_reportvote (id, reportId, userId, 
      category, createdate, state
      )
    values (#{id,jdbcType=INTEGER}, #{reportId,jdbcType=INTEGER}, #{user.userId,jdbcType=INTEGER}, 
      #{category,jdbcType=INTEGER}, #{createdate,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sss.pojo.ReportVote" >
    insert into ss_reportvote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reportId != null" >
        reportId,
      </if>
      <if test="user.userId != null" >
        userId,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="state != null" >
        state,
      </if>
      	createdate,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reportId != null" >
        #{reportId,jdbcType=INTEGER},
      </if>
      <if test="user.userId != null" >
        #{user.userId,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createdate == null or createdate == ''" >
        now(),
      </if>
      <if test="createdate != null and createdate != ''" >
        #{createdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sss.pojo.ReportVote" >
    update ss_reportvote
    <set >
      <if test="reportId != null" >
        reportId = #{reportId,jdbcType=INTEGER},
      </if>
      <if test="user.userId != null" >
        userId = #{user.userId,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="createdate != null and createdate != ''" >
        createdate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sss.pojo.ReportVote" >
    update ss_reportvote
    set reportId = #{reportId,jdbcType=INTEGER},
      userId = #{user.userId,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 高级搜索 -->
  <select id="selectByAdvancedSearchDTO" useCache="false" resultMap="BaseResultMap">
	<include refid="associateQuery" />
	where 1=1 
		<if test="list != null">
			<foreach item="item" index="index" collection="list" separator=" " >  
			  and ${item.fieldName} ${item.condition} ${item.fieldValue} 
			</foreach>  
		</if>
	order by r.createdate desc
  </select>
  <!-- 复杂高级搜索 -->
  <select id="selectByComplexAdvancedSearchDTO" useCache="false" resultMap="BaseResultMap">
    <include refid="associateQuery" />
    where 1=1 
    	<if test="list != null">
		    <foreach item="mapItem" index="listIndex" collection="list" >  
		    	<if test="listIndex == 0">and</if>
				 (
				<foreach item="item" index="index" collection="mapItem.searchDTOs">
					${item.fieldName} ${item.condition} ${item.fieldValue} ${item.LogicalOperator} 
				</foreach>
				)
				${mapItem.groupLogicalOperator}
			</foreach>  
    	</if>
    order by r.createdate desc
  </select>
</mapper>