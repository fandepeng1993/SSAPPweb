<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.sss" use-default-filters="false">
		<context:include-filter type="annotation"
        expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 扫描activiti在线编辑器的跳转@RestController, 自动扫描流程跟踪插件接口 -->
	<context:component-scan base-package="com.rest" use-default-filters="false">
		<context:include-filter type="annotation" 
		expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 单例json对象 -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->
	
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven/>
	<!-- 将SpringMVC不能处理的请求交给tomcat -->
   	<mvc:default-servlet-handler />
   	<mvc:resources mapping="/css/**" location="/css/" cache-period="2592000"/>
   	<mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="2592000"/> 
   	<mvc:resources mapping="/images/**" location="/images/" cache-period="2592000"/> 
   	<mvc:resources mapping="/img/**" location="/img/" cache-period="2592000"/> 
   	<mvc:resources mapping="/js/**" location="/js/" cache-period="2592000"/> 
   	<mvc:resources mapping="/manage/**" location="/manage/" cache-period="2592000"/>
   	<mvc:resources mapping="/app/**" location="/app/" cache-period="2592000"/>
   	<mvc:resources mapping="/knowledgeBase/**" location="/knowledgeBase/" cache-period="2592000"/>
   	<mvc:resources mapping="/login.html" location="/login.html" cache-period="2592000"/>
   	<mvc:resources mapping="/statusPage/**" location="/statusPage/" cache-period="2592000"/>
   	<mvc:resources mapping="/form/**" location="/form/" cache-period="2592000"/>
   	<mvc:resources mapping="/diagram-viewer/**" location="/diagram-viewer/" cache-period="2592000"/>
   	<mvc:resources mapping="/editor-app/**" location="/editor-app/" cache-period="2592000"/>
   	<mvc:resources mapping="/modeler.html" location="/modeler.html" cache-period="2592000"/>
   	<!-- <mvc:resources mapping="/404.html" location="/404.html" cache-period="2592000"/>
   	<mvc:resources mapping="/405.html" location="/405.html" cache-period="2592000"/>
   	<mvc:resources mapping="/500.html" location="/500.html" cache-period="2592000"/>
   	<mvc:resources mapping="/unauthorizedPage.html" location="/unauthorizedPage.html" cache-period="2592000"/> -->
	
	<!-- 处理请求返回json字符串的中文乱码问题 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
            </list>
        </property>
    </bean>
   	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	JSON转换器
			</list>
		</property>
	</bean> -->
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <mvc:resources mapping="/css/**" location="/css/" cache-period="31536000"/>  
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31536000"/>  
    <mvc:resources mapping="/img/**" location="/img/" cache-period="31536000"/>  
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31536000"/>
    <mvc:resources mapping="/*.html" location="/" cache-period="31536000"/>  -->
    
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 

	<!--配置拦截器, 多个拦截器,顺序执行 -->  
	<!-- <mvc:interceptors>    
	    <mvc:interceptor>    
	        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
	        <mvc:mapping path="/**" />
	        <mvc:exclude-mapping path="/messagePushServlet"/>
	        <mvc:exclude-mapping path="/sessionAdmin/**"/>  
	        <mvc:exclude-mapping path="/loginAdmin/**"/>  
	        <mvc:exclude-mapping path="/blogAdmin/**"/>  
	        <mvc:exclude-mapping path="/css/**"/>  
	        <mvc:exclude-mapping path="/fonts/**"/>  
	        <mvc:exclude-mapping path="/images/**"/>  
	        <mvc:exclude-mapping path="/img/**"/>  
	        <mvc:exclude-mapping path="/js/**"/>  
	        <mvc:exclude-mapping path="/manage/**"/>  
	        <mvc:exclude-mapping path="/app/**"/>  
	        <mvc:exclude-mapping path="/knowledgeBase/**"/>  
	        <mvc:exclude-mapping path="/login.html"/>  
	        <mvc:exclude-mapping path="/statusPage/**"/>  
	        <bean class="com.sss.util.MsgInterceptor"></bean>    
	    </mvc:interceptor>  
	    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
	</mvc:interceptors>  -->
</beans>